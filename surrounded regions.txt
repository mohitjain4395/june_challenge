class Solution {
public:
    void dfs(vector<vector<char>>& board, int i, int j, int R, int C)
    {
        if(i>=0 && i<R && j>=0 && j<C && board[i][j]=='O')
        {
            board[i][j]='A';
            dfs(board, i+1, j, R, C);
            dfs(board, i-1, j, R, C);
            dfs(board, i, j+1, R, C);
            dfs(board, i, j-1, R, C);
        }
    }
    
    void solve(vector<vector<char>>& board) {
        int R=board.size();
        if(R<=2) return;
        int C=board[0].size();
        if(C<=2) return;
        for(int i=0;i<R;i++)
            for(int j=0;j<C;j++)
                if(board[i][j]=='O' && (i==0 || j==0 || i==R-1 || j==C-1))
                    dfs(board, i, j, R, C);
        for(int i=0;i<R;i++)
            for(int j=0;j<C;j++)
                if(board[i][j]=='O') board[i][j]='X';
                else if(board[i][j]=='A') board[i][j]='O';
    }
};