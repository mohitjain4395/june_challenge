class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {
        vector <vector < pair<int, int>>> adj(n);
        for(vector<int> f : flights)
            adj[f[0]].push_back({f[1],f[2]});
        priority_queue < vector<int> , vector<vector<int> >, greater < vector<int>> > que;
        que.push({0,src,K+1});
        int d,u,e;
        vector <int> top;
        while(!que.empty())
        {
            top=que.top();
            que.pop();
            d=top[0];
            u=top[1];
            e=top[2];
            if(dst==u) return d;
            if(e>0)
                for(pair<int,int> &v : adj[u])
                    que.push({d+v.second,v.first,e-1});
        }
        return -1;
    }
};