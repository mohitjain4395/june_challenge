class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        if(nums.empty())
            return 0;
        if(!nums.empty() && target<nums[0])
            return 0;
        int l=0;
        int r=nums.size()-1;
        if(!nums.empty() && target>nums[r])
            return r+1;
        int mid;
        while(l<=r)
        {
            if(nums[l]==target)
                return l;
            if(nums[r]==target)
                return r;
            
            mid=l+(r-l)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                r=mid-1;
            else
                l=mid+1;
        }
        if(nums[mid]<target)
            return mid+1;
        else
            return mid;
    }
};